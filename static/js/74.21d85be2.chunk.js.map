{"version":3,"file":"static/js/74.21d85be2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts/MyContacts.module.css?0c46","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/MyContacts/ContactsForm/ContactsForm.module.css?8d9b","components/MyContacts/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactsSearch/ContactsSearch.module.css?4744","components/MyContacts/ContactsSearch/ContactsSearch.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactsList/ContactsList.module.css?b5f7","components/MyContacts/ContactsList/ContactsList.jsx","pages/Contacts/MyContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MyContacts_wrapper__HEaPA\",\"block\":\"MyContacts_block__Sww7S\",\"title\":\"MyContacts_title__tg6KJ\"};","export const getContacts = state => state.contacts.contacts;\n\nexport const getFilterValue = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"group\":\"ContactsForm_group__fEhew\",\"btn\":\"ContactsForm_btn__gpbwz\",\"input\":\"ContactsForm_input__3zq2m\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport css from './ContactsForm.module.css';\nimport { toast } from 'react-toastify';\n\nconst init = { name: '', number: '' };\n\nconst ContactsForm = () => {\n  const [form, setForm] = useState(init);\n  const { name, number } = form;\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLocaleLowerCase() === name.toLocaleLowerCase() ||\n          contact.number === number\n      )\n    ) {\n      reset();\n      return toast.error(`${name} or ${number} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setForm(init);\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setForm(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.group}>\n        <label className={css.label}>Name </label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.label}> Number</label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button className={css.btn} type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContactsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactsSearch_input__KICYI\",\"group\":\"ContactsSearch_group__37h-b\"};","import css from './ContactsSearch.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from 'redux/filter/filterSlice';\nimport { getFilterValue } from 'redux/contacts/selectors';\n\nconst ContactsSearch = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilterValue);\n\n  const onChange = e => {\n    dispatch(setFilterValue(e.currentTarget.value));\n  };\n\n  return (\n    <div className={css.group}>\n      <label>Find contacts by name:</label>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={onChange}\n        placeholder=\"Enter name\"\n      />\n    </div>\n  );\n};\n\nexport default ContactsSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__ok0mq\",\"item\":\"ContactsList_item__5SJeY\",\"btn\":\"ContactsList_btn__oRQMZ\"};","import css from './ContactsList.module.css';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  getFilterValue,\n  getContacts,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport Loader from '../../Loader/Loader';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilterValue);\n  const isLoading = useSelector(getIsLoading);\n  const onError = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {onError && toast.error('Something wrong')}\n      <ol className={css.list}>\n        {filteredContacts.map(({ name, number, id }) => {\n          return (\n            <li className={css.item} key={id}>\n              {name}: {number}\n              <button\n                className={css.btn}\n                onClick={() => dispatch(deleteContact(id))}\n                type=\"button\"\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import css from './MyContacts.module.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactsForm from '../../components/MyContacts/ContactsForm/ContactsForm';\nimport ContactsSearch from '../../components/MyContacts/ContactsSearch/ContactsSearch';\nimport ContactsList from '../../components/MyContacts/ContactsList/ContactsList';\n\nconst MyContacts = () => {\n  return (\n    <div className={css.wrapper}>\n      <div className={css.block}>\n        <h2 className={css.title}>Phonebook</h2>\n        <ContactsForm />\n      </div>\n      <div className={css.block}>\n        <h2 className={css.title}>Contacts</h2>\n        <ContactsSearch />\n        {<ContactsList />}\n      </div>\n      <ToastContainer position=\"top-center\" autoClose={2000} />\n    </div>\n  );\n};\n\nexport default MyContacts;\n"],"names":["getContacts","state","contacts","getFilterValue","filter","getIsLoading","isLoading","getError","error","init","name","number","useState","form","setForm","useSelector","dispatch","useDispatch","reset","handleChange","target","value","prevState","className","css","onSubmit","e","preventDefault","find","contact","toLocaleLowerCase","toast","addContact","type","onChange","pattern","title","required","filterValue","setFilterValue","currentTarget","placeholder","onError","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","Loader","map","id","onClick","deleteContact","position","autoClose"],"sourceRoot":""}